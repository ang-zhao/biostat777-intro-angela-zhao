[
  {
    "objectID": "example_analysis.html",
    "href": "example_analysis.html",
    "title": "Example Analysis",
    "section": "",
    "text": "Code\n# Load libraries\nlibrary(tidyverse)\nlibrary(jsonlite)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(purrr)\nlibrary(sf)\nlibrary(knitr)\npath = here::here()"
  },
  {
    "objectID": "example_analysis.html#objective",
    "href": "example_analysis.html#objective",
    "title": "Example Analysis",
    "section": "Objective",
    "text": "Objective\nIn this analysis, we want to understand the mortality trends in Baltimore, focusing on how various socioeconomic factors, such as vehicle availability, internet access, and fast food density, affect mortality rates across different age groups. The target audience for the analysis includes anyone that might be curious about public health and the mortality trends in Baltimore."
  },
  {
    "objectID": "example_analysis.html#data",
    "href": "example_analysis.html#data",
    "title": "Example Analysis",
    "section": "Data",
    "text": "Data\nThe data for this analysis was sourced from Open Baltimore - a data set from the Baltimore City Health Department. Open Baltimore contains the urls for JSON files containing the data we need. Neighbourhood-specific mortality data for six different age groups (Infant, 1-14, 15-24, 25-44, 45-64, and 65-84) were collected for between 2011 and 2018.\nWe also downloaded socioeconomic data such as Percent of Households with No Vehicle Available, Percent of Households with No Internet at Home, and Fast Food Outlet Density per 1,000 Residents.\nNext, we load the JSON files that were retrieved from the urls in Open Baltimore.\n\n\nCode\n# Load libraries\nlibrary(tidyverse)\n\n# Load raw data\nopen_baltimore = read.csv(\"data/raw/Open Baltimore.csv\")\n\n# Filter data to only include rows that contain the word \"mortality\"\nmortality_data = open_baltimore %>% \n  filter(grepl(\"mortality\", title, ignore.case = TRUE) |\n         grepl(\"mortality\", description, ignore.case = TRUE))\n\n# Download json mortality data\nmortality_urls = paste0(mortality_data$url, \n              \"/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\")\n\n## Helper function to extract ages from the title of each mortality data file\nextract_ages = function(title) {\n  if (!grepl(\"\\\\d+-\\\\d+\", title)) {\n    return(\"infant\")\n  }\n  \n  else {\n    return(stringr::str_extract(title, regex(\"\\\\d+-\\\\d+\")))\n  }\n}\n\nages = mapply(extract_ages, mortality_data$title)\nmortality_filenames = paste0(\"data/json/mortality_\", ages, \".json\")\nmapply(curl::curl_download, urls, filenames)\n\n# Download the data for (1) percentage of households with no vehicles available, \n# (2) percentage of households with no internet at home, and (3) fast food \n# outlet density per 1,000 residents.\n\nsocioeconomic_data = open_baltimore %>% \n  filter(grepl(\"Percent of Households with No Vehicles Available\", title, ignore.case = TRUE) |\n           grepl(\"Percent of Households with No Internet at Home\", title, ignore.case = TRUE) |\n           grepl(\"Fast Food Outlet Density per 1,000 Residents\", title, ignore.case = TRUE))\n\nsocioeconomic_urls = paste0(socioeconomic_data$url, \n              \"/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\")\n\nsocioeconomic_filenames = c(\"data/json/fastfood.json\", \"data/json/no_vehicles.json\", \"data/json/no_internet.json\")\nmapply(curl::curl_download, urls, filenames)\n\n\nAfter loading the data, we extract important features, such as mortality rate and transform the data to long format for visualization. An example of how this is done is below.\n\n\nCode\n# Function to extract attributes from the JSON structure\nextract_attributes <- function(json_data) {\n  map_df(json_data$features, ~ .x$attributes)\n}\n\n# Read mortality data for each age group\nmortality_infant <- read_json(paste0(path,\"/data/json/mortality_infant.json\")) %>% extract_attributes()\nmortality_1_14 <- read_json(paste0(path, \"/data/json/mortality_1-14.json\")) %>% extract_attributes()\nmortality_15_24 <- read_json(paste0(path, \"/data/json/mortality_15-24.json\")) %>% extract_attributes()\nmortality_25_44 <- read_json(paste0(path, \"/data/json/mortality_25-44.json\")) %>% extract_attributes()\nmortality_45_64 <- read_json(paste0(path, \"/data/json/mortality_45-64.json\")) %>% extract_attributes()\nmortality_65_84 <- read_json(paste0(path, \"/data/json/mortality_65-84.json\")) %>% extract_attributes()\n\n# Read predictor data (e.g., no internet, no vehicles, fast food)\nno_internet <- read_json(paste0(path, \"/data/json/no_internet.json\")) %>% extract_attributes()\nno_vehicles <- read_json(paste0(path, \"/data/json/no_vehicles.json\")) %>% extract_attributes()\nfast_food <- read_json(paste0(path, \"/data/json/fastfood.json\")) %>% extract_attributes()\n\n# Reshape data to long format for plotting\nreshape_to_long = function(data, age_group, prefix, value) {\n  data %>%\n    select(CSA2010, starts_with(prefix)) %>%\n    pivot_longer(cols = starts_with(prefix), names_to = \"year\", values_to = paste0(value, \"_rate\")) %>%\n    mutate(year = as.integer(str_extract(year, \"\\\\d+$\")),\n           age_group = age_group)\n  # data$mean = rep(mean(data$morality_rate), nrow(data))\n}\n\nmortality_data <- bind_rows(\n  reshape_to_long(mortality_infant, \"Infant\", \"mort1\", \"mort\"),\n  reshape_to_long(mortality_1_14, \"1-14\", \"mort14\", \"mort\"),\n  reshape_to_long(mortality_15_24, \"15-24\", \"mort24\", \"mort\"),\n  reshape_to_long(mortality_25_44, \"25-44\", \"mort44\", \"mort\"),\n  reshape_to_long(mortality_45_64, \"45-64\", \"mort64\", \"mort\"),\n  reshape_to_long(mortality_65_84, \"65-84\", \"mort84\", \"mort\"))\nmortality_data$year = mortality_data$year + 2000\nmean_mortality = mortality_data %>% group_by(age_group, year) %>% summarise(mean_mort = mean(mort_rate, na.rm = TRUE))\n\n\nAfter reading in theh JSON files and extracting our desired features, the data dictionary looks like this.\n\n\nCode\nhead(mortality_data)\n\n\n# A tibble: 6 × 4\n  CSA2010                        year mort_rate age_group\n  <chr>                         <dbl>     <dbl> <chr>    \n1 Allendale/Irvington/S. Hilton  2011     14.8  Infant   \n2 Allendale/Irvington/S. Hilton  2012     16.9  Infant   \n3 Allendale/Irvington/S. Hilton  2013     14.1  Infant   \n4 Allendale/Irvington/S. Hilton  2014     11.4  Infant   \n5 Allendale/Irvington/S. Hilton  2015     10.6  Infant   \n6 Allendale/Irvington/S. Hilton  2016      8.99 Infant"
  },
  {
    "objectID": "example_analysis.html#results",
    "href": "example_analysis.html#results",
    "title": "Example Analysis",
    "section": "Results",
    "text": "Results\nWe used a variety of plots to visualize the relationships between socioeconomic covariates and mortality rates over time and across age groups. Scatter plots and trend lines were used to show correlations, and spatial maps were generated to highlight geographical variations in mortality.\n\nMortality Over Time by Age Group\nFigure 1 visualizes mortality rates across multiple age groups (Infant, 1-14, 15-24, 25-44, 45-64, and 65-84) from 2011 to 2018.\nWe notice that…\n\nInfant Mortality: While lower than the older age groups, there are notable spikes in infant mortality, particularly in 2016.\nYouth (1-14 and 15-24): These groups maintain relatively low mortality rates over time.\nOlder Age Groups (45-64 and 65-84): These groups consistently exhibit higher mortality rates compared to younger groups. The mortality rate in these groups shows some fluctuations, but overall, the trend remains stable over time.\n\n\n\nCode\n# Plot mortality rates for each age group over time\nggplot(mortality_data, aes(x = as.factor(year), y = mort_rate, color = age_group)) +\n  geom_jitter(alpha = 0.7) +\n  geom_line(data = mean_mortality, aes(x = as.factor(year), y = mean_mort, group = age_group), size = 1.5) + \n  facet_wrap(~age_group, scales = \"free\", ncol = 2) +\n  theme_minimal() +\n  labs(title = \"Mortality Rate Over Time\",\n       subtitle = \"Stratefied by Age Group\",\n       x = \"Year\",\n       y = \"Mortality Rate\") +\n  scale_color_brewer(\"Age Group\", palette = \"Blues\") +\n  theme(legend.position = c(.77,.98), \n        legend.direction =\"horizontal\",\n        legend.text = element_text(size = 8),\n        legend.title = element_text(size = 8),\n        strip.background = element_blank(),\n        strip.text = element_blank()) \n\n\n\n\n\nFigure 1: Mortality Over Time by Age Group\n\n\n\n\n\n\nSocioeconomic Covariates vs. Mortality Rates\nThe first panel shows the distributions of each socioeconomic covariate across Baltimore neighbourhoods. The remaining panels illustrate the relationships between each of the socioeconomic covariates and mortality rates, stratified by age group. For each covariate, we isolated the data to years where mortality data was also reported.\n\nDistribution of Sociodemographic CharacteristicsFast Food Outlet Density and Mortality Rate CorrelationHome Internet Access and Mortality Rate CorrelationVehicle Access and Mortality Rate Correlation\n\n\n\n\nCode\n# Adding covariates to data frame\nfastfd_data = reshape_to_long(fast_food[,1:5], \"\", \"Fastfd\", \"fastfd\") %>% \n  subset(select = -c(age_group))\nfastfd_data$year = fastfd_data$year + 2000\nfastfd_mortality_data = inner_join(mortality_data, fastfd_data, \n                                   by = c(\"CSA2010\", \"year\")) \nnohhint_data = reshape_to_long(no_internet[,1:4], \"\", \"nohhint\", \"nohhint\") %>% \n  subset(select = -c(age_group))\nnohhint_data$year = nohhint_data$year + 2000\nnohhint_mortality_data = inner_join(mortality_data, nohhint_data, \n                                   by = c(\"CSA2010\", \"year\")) \n\nnovhcl_data = reshape_to_long(no_vehicles[,1:10], \"\", \"novhcl\", \"novhcl\") %>% \n  subset(select = -c(age_group))\nnovhcl_data$year = novhcl_data$year + 2000\nnovhcl_mortality_data = inner_join(mortality_data, novhcl_data, \n                                   by = c(\"CSA2010\", \"year\")) \n\n# Plot distribution of fast food density\nD1 = ggplot(fastfd_data, aes(x = fastfd_rate)) +\n  geom_histogram(aes(y=..density..), bins = 50, alpha = 0.5, fill = \"blue\") +\n  theme_minimal() +\n  labs(title = \"Distribution of Fast Food Outlet Density per 1,000 Residents\",\n       x = \"Fast Food Outlet Density per 1,000 Residents\",\n       y = \"Frequency\") \n \n# Plot distribution of percentage of households with no internet\nD2 = ggplot(nohhint_data, aes(x = nohhint_rate)) +\n  geom_histogram(aes(y=..density..), bins = 50, alpha = 0.5, fill = \"blue\") +\n  theme_minimal() +\n  labs(title = \"Distribution of Percent of Households with No Internet at Home\",\n       x = \"Percent of Households with No Internet at Home\",\n       y = \"Frequency\") \n\n# Plot distribution of percentage of households with no internet\nD3 = ggplot(novhcl_data, aes(x = novhcl_rate)) +\n  geom_histogram(aes(y=..density..), bins = 50, alpha = 0.5, fill = \"blue\") +\n  theme_minimal() +\n  labs(title = \"Distribution of Percent of Households with No Vehicles Available\",\n       x = \"Percent of Households with No Vehicles Available\",\n       y = \"Frequency\") \ngridExtra::grid.arrange(D1, D2, D3, ncol = 1)\n\n\n\n\n\nFigure 2: Visualizing the sociodemographic characteristics of the population.\n\n\n\n\n\nFast Food Outlet Density: The distribution is heavily skewed towards low fast food density per 1,000 residents with a few outliers.\nPercentage of Households with No Internet at Home: A notable proportion of households have no internet access, with the distribution showing multiple peaks around 15-20% and 25-35%.\nPercentage of Households with No Vehicles Availabile: A notable percentage of households lack vehicle access, with the median falling around 30% and some areas reaching over 60%.\n\n\n\n\n\nCode\n# Relationship between Fast Food Density and Mortality \nggplot(fastfd_mortality_data, aes(x = mort_rate, y = fastfd_rate, color = as.factor(year))) +\n  geom_jitter(alpha = 0.7) +\n  geom_smooth() +\n facet_wrap(~age_group, scales = \"free\", ncol = 2) +\n  theme_minimal() +\n  labs(title = \"Fast Food Density vs. Mortality Rate\",\n       subtitle = \"Stratefied by Age Group\",\n       x = \"Mortality Rate\",\n       y = \"Fast Food Outlet Density per 1,000 Residents\") +\n  scale_color_brewer(\"Year\", palette = \"Blues\") +\n  theme(legend.position = \"bottom\", \n        legend.direction =\"horizontal\",\n        legend.text = element_text(size = 8),\n        legend.title = element_text(size = 8),\n        plot.title = element_text(size = 14)) \n\n\n\n\n\nFigure 3: We show the age group trends. Although fast food availability may be linked to poorer health outcomes in theory, these trends are not present in our data. The absence of clear trends and the presence of some extreme outliers prevent us from making any conclusions.\n\n\n\n\n\n\n\n\nCode\nggplot(nohhint_mortality_data, aes(x = mort_rate, y = nohhint_rate, color = as.factor(year))) +\n  geom_jitter(alpha = 0.7) +\n  facet_wrap(~age_group, scales = \"free\", ncol = 2) +\n  theme_minimal() +\n  labs(title = \"Percent of Households with No Internet vs. Mortality Rate\",\n       subtitle = \"Stratefied by Age Group\",\n       x = \"Mortality Rate\",\n       y = \"Percent of Households with No Internet at Home\") +\n  scale_color_brewer(\"Year\", palette = \"Blues\") +\n  theme(legend.position = \"bottom\", \n        legend.direction =\"horizontal\",\n        legend.text = element_text(size = 8),\n        legend.title = element_text(size = 8),\n        plot.title = element_text(size = 14)) \n\n\n\n\n\nFigure 4: The plot shows a clear positive trend between mortality rate and lack of home internet access, in particular for ages 15-64. The trend is less pronounced in Infant, 1-14, and 65-84 age groups.\n\n\n\n\n\n\n\n\nCode\nggplot(novhcl_mortality_data, aes(x = mort_rate, y = novhcl_rate, color = as.factor(year))) +\n  geom_jitter(alpha = 0.7) +\n  facet_wrap(~age_group, scales = \"free\", ncol = 2) +\n  theme_minimal() +\n  labs(title = \"Percent of Households with No Vehicles Available vs. Mortality Rate\",\n       subtitle = \"Stratefied by Age Group\",\n       x = \"Mortality Rate\",\n       y = \"Percent of Households with No Vehicles Available\") +\n  scale_color_brewer(\"Year\", palette = \"Blues\") +\n  theme(legend.position = \"bottom\", \n        legend.direction =\"horizontal\",\n        legend.text = element_text(size = 8),\n        legend.title = element_text(size = 8),\n        plot.title = element_text(size = 14)) \n\n\n\n\n\nFigure 5: These results suggest that there is indeed a positive correlation between lower rates of vehicle availability and higher rates of mortality Again, the trend is less pronounced in Infant, 1-14, and 65-84 age groups.\n\n\n\n\n\n\n\n\n\nSpatial Distribution of Mortality Rates by Year and Age Group\n?@fig-6 presents spatial maps of mortality rates across Baltimore from 2011 to 2018 for different age groups. Each row corresponds to an age group, and each column to a year.\n\nGeographical Mortality Patterns: Hotspots for mortality consistently appear in certain areas of Baltimore. For example, areas in the northern and central regions exhibit high mortality rates across different age groups. Infant mortality appears to be much higher in a few central regions than in surrounding regions.\nTemporal Changes: While certain hotspots remain constant, there are areas where mortality fluctuates. Some hotspots, particularly in the infant and 15-24 age groups, appear to have decreasing mortality rates over time. Other hotspots in the 65-84 group, for example, seem to have increasing mortality rates in more recent years.\n\n\n\nCode\nlibrary(gridExtra)\nlibrary(grid)\nadd_labels <- function(plot, left_label = NULL, top_labels = NULL) {\n  if (!is.null(left_label)) {\n    # Add a left-side (row) label for the age group\n    plot <- arrangeGrob(plot, left = textGrob(left_label, rot = 90, gp = gpar(fontsize = 16)))\n  }\n  if (!is.null(top_labels)) {\n    # Create a row of top labels (years) using textGrob and arrange them in a grid\n    top_grobs <- textGrob(paste(top_labels, collapse = \"    \"), gp = gpar(fontsize = 12))\n    plot <- grid.arrange(top_grobs, plot, heights = unit.c(unit(1, \"lines\"), unit(1, \"npc\")))  # Stack top labels above plot\n  }\n  return(plot)\n}\n\n\n\n\nCode\n# Read in the JSON data for mortality_infant\nres <- read_json(paste0(path, \"/data/json/mortality_1-14.json\"), simplifyVector = FALSE)\ndf <- purrr::map(res$features, function(r) {\n    if (!is.null(r$geometry) && !is.null(r$geometry$rings) && length(r$geometry$rings) > 0) {\n      # Loop over each ring layer and extract coordinates\n      rings_data <- purrr::map(r$geometry$rings, function(ring) {\n        do.call(rbind, purrr::map(ring, unlist)) %>%\n          as.data.frame(stringsAsFactors = FALSE)\n      })\n      # Combine the multiple rings into a single data frame\n      x <- bind_rows(rings_data)\n      colnames(x) <- c(\"lon\", \"lat\")\n      x$CSA2010 <- r$attributes$CSA2010 # Include CSA2010\n      return(x)\n    } else {\n      return(NULL)\n    }\n  })\nout <- res %>% extract_attributes()\nnames(df) = out$CSA2010\ndf = dplyr::bind_rows(df, .id = \"CSA2010\")\npolygon <- df %>%\n  group_by(CSA2010) %>%\n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) %>%\n  summarise(geometry = st_combine(geometry)) %>%\n  st_cast(\"POLYGON\") %>%\n  left_join(mortality_data, by = \"CSA2010\")\n\nP1 = ggplot() +\n  geom_sf(data = filter(polygon, age_group == \"Infant\"), aes(fill = mort_rate)) +\n  facet_wrap( ~ year, ncol = 8) + \n  labs(x = \"\", y = \"\") +\n  scale_y_continuous() +\n  scale_fill_viridis_c(\"Mortality \\nRate\", option = \"C\", na.value = \"grey50\") +\n  #scale_fill_distiller(\"Mortality Rate\", palette = \"Blues\") + \n  theme_minimal() + # Clean theme\n  theme(\n    axis.text.x = element_blank(), # Remove y-axis labels\n    axis.text.y = element_blank(), # Remove y-axis labels\n    strip.text = element_text(size = 16),# Adjust facet label size\n    legend.title = element_text(size = 12),\n    legend.key.size = unit(10, \"mm\"),\n    legend.position = \"right\"\n  )\nP1_labeled <- add_labels(P1, left_label = \"Infant\")\n\nP14 = ggplot() +\n  geom_sf(data = filter(polygon, age_group == \"1-14\"), aes(fill = mort_rate)) +\n  facet_wrap( ~ year, ncol = 8) + \n  labs(x = \"\", y = \"\") +\n  scale_y_continuous() +\n  scale_fill_viridis_c(\"\", option = \"C\", na.value = \"grey50\") +\n  #scale_fill_distiller(\"Mortality Rate\", palette = \"Blues\") + \n  theme_minimal() + # Clean theme\n  theme(\n    axis.text.x = element_blank(), # Remove y-axis labels\n    axis.text.y = element_blank(), # Remove y-axis labels\n    strip.text = element_blank(),# Adjust facet label size\n    legend.title = element_blank(),\n    legend.key.size = unit(10, \"mm\"),\n    legend.position = \"right\"\n  ) \n\nP14_labeled <- add_labels(P14, left_label = \"1-14\")\n\nP24 = ggplot() +\n  geom_sf(data = filter(polygon, age_group == \"15-24\"), aes(fill = mort_rate)) +\n  facet_wrap( ~ year, ncol = 8) + \n  labs(x = \"\", y = \"\") +\n  scale_y_continuous() +\n  scale_fill_viridis_c(\"\", option = \"C\", na.value = \"grey50\") +\n  #scale_fill_distiller(\"Mortality Rate\", palette = \"Blues\") + \n  theme_minimal() + # Clean theme\n  theme(\n    axis.text.x = element_blank(), # Remove y-axis labels\n    axis.text.y = element_blank(), # Remove y-axis labels\n    strip.text = element_blank(),# Adjust facet label size\n    legend.title = element_blank(),\n    legend.key.size = unit(10, \"mm\"),\n    legend.position = \"right\"\n  )\nP24_labeled = add_labels(P24, left_label = \"15-24\")\n\nP44 = ggplot() +\n  geom_sf(data = filter(polygon, age_group == \"25-44\"), aes(fill = mort_rate)) +\n  facet_wrap( ~ year, ncol = 8) + \n  labs(x = \"\", y = \"\") +\n  scale_y_continuous() +\n  scale_fill_viridis_c(\"\", option = \"C\", na.value = \"grey50\") +\n  #scale_fill_distiller(\"Mortality Rate\", palette = \"Blues\") + \n  theme_minimal() + # Clean theme\n  theme(\n    axis.text.x = element_blank(), # Remove y-axis labels\n    axis.text.y = element_blank(), # Remove y-axis labels\n    strip.text = element_blank(),# Adjust facet label size\n    legend.title = element_blank(),\n    legend.key.size = unit(10, \"mm\"),\n    legend.position = \"right\"\n  ) \n\nP44_labeled = add_labels(P44, left_label = \"25-44\")\n\nP64 = ggplot() +\n  geom_sf(data = filter(polygon, age_group == \"45-64\"), aes(fill = mort_rate)) +\n  facet_wrap( ~ year, ncol = 8) + \n  labs(x = \"\", y = \"\") +\n  scale_y_continuous() +\n  scale_fill_viridis_c(\"\", option = \"C\", na.value = \"grey50\") +\n  #scale_fill_distiller(\"Mortality Rate\", palette = \"Blues\") + \n  theme_minimal() + # Clean theme\n  theme(\n    axis.text.x = element_blank(), # Remove y-axis labels\n    axis.text.y = element_blank(), # Remove y-axis labels\n    strip.text = element_blank(),# Adjust facet label size\n    legend.title = element_blank(),\n    legend.key.size = unit(10, \"mm\"),\n    legend.position = \"right\"\n  ) \nP64_labeled = add_labels(P64, left_label = \"45-64\")\n\nP84 = ggplot() +\n  geom_sf(data = filter(polygon, age_group == \"65-84\"), aes(fill = mort_rate)) +\n  facet_wrap( ~ year, ncol = 8) + \n  labs(x = \"\", y = \"\") +\n  scale_y_continuous() +\n  scale_fill_viridis_c(\"\", option = \"C\", na.value = \"grey50\") +\n  #scale_fill_distiller(\"Mortality Rate\", palette = \"Blues\") + \n  theme_minimal() + # Clean theme\n  theme(\n    axis.text.x = element_blank(), # Remove y-axis labels\n    axis.text.y = element_blank(), # Remove y-axis labels\n    strip.text = element_blank(),# Adjust facet label size\n    legend.title = element_blank(),\n    legend.key.size = unit(10, \"mm\"),\n    legend.position = \"right\"\n  ) \nP84_labeled = add_labels(P84, left_label = \"65-84\")\ngridExtra::grid.arrange(P1_labeled, P14_labeled, P24_labeled,\n                                     P44_labeled, P64_labeled, P84_labeled, \n                                     ncol = 1)\n\n\n\n\n\nCode\n#ggsave(paste0(path,\"/docs/figures/mortality_maps.png\"), final_plot, width = 15, height = 20)\n\n\n\nsource\ndictionary\n5 functions from tidyr/dplyr\n3 plots using 3 different geoms; titles, subtitles, captions, human-understandable axisone image or table\nat least 1 plot using facet grid/wrap\nOne image or tabel, saved from web\nTwo different callout blocks\n.bib file with 3 citations\n1 margin content"
  },
  {
    "objectID": "example_analysis.html#results-1",
    "href": "example_analysis.html#results-1",
    "title": "Example Analysis",
    "section": "Results",
    "text": "Results\n\nsummarize in 4-6 sentences"
  },
  {
    "objectID": "example_analysis.html#functions-used",
    "href": "example_analysis.html#functions-used",
    "title": "Example Analysis",
    "section": "Functions used",
    "text": "Functions used\nggplot2 :\ntidyr :\ndplyr :"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Angela Zhao",
    "section": "",
    "text": "Angela Zhao is a first year PhD student in Biostatistics at Johns Hopkins University. Her favourite animal is the spherical cow. When reality gets too messy, assume everything is perfectly round and frictionless.\nSpherical cow image retrieved from Wikipedia on October 27th, 2024."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Johns Hopkins University\nPhD in Biostatistics (In progress)\nScM in Biostatistics (2024)\nMcGill University\nBS in Joint Honours Computer Science and Biology, Minor in Mathematics (2022)"
  },
  {
    "objectID": "about.html#research-interests",
    "href": "about.html#research-interests",
    "title": "About",
    "section": "Research Interests",
    "text": "Research Interests\n\nFunctional data analysis/time-series modeling\nDomain-specific applications to wearable device and imaging data"
  },
  {
    "objectID": "about.html#hobbies",
    "href": "about.html#hobbies",
    "title": "About",
    "section": "Hobbies",
    "text": "Hobbies\n\nBouldering, stand-up comedy, and playing classical music (fun fact: she taught piano for 4 years)."
  }
]